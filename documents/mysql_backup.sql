CREATE TABLE USER (
  user_id    VARCHAR(20)    NOT NULL    PRIMARY KEY,
  password    VARCHAR(255)    NOT NULL,
  profile_img    VARCHAR(255)    DEFAULT ''    NOT NULL,
  user_name    VARCHAR(50)    NOT NULL,
  permission_level    TINYINT    DEFAULT -1    NOT NULL,
  user_email    VARCHAR(100)    DEFAULT ''    NOT NULL,
  gender    CHAR(1)    DEFAULT ''    NOT NULL,
  birth_date    DATE    DEFAULT '1000-01-01'    NOT NULL,
  phone_number    VARCHAR(20)    DEFAULT ''    NOT NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  is_login    BOOLEAN    DEFAULT false    NOT NULL
);


CREATE TABLE USER_LOG (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  user_id    VARCHAR(20)    NOT NULL,
  log_date    DATETIME    DEFAULT NOW()    NOT NULL,
  type    VARCHAR(10)    NOT NULL
  CONSTRAINT FK_USER_ID  FOREIGN KEY(user_id)  REFERENCES  USER(user_id)  ON DELETE  NO ACTION,
);


CREATE TABLE NOTIFICATION (
id    INT    PRIMARY KEY    AUTO_INCREMENT,
from_user_id    VARCHAR(20)    NOT NULL,
target_user_id    VARCHAR(20)    NOT NULL,
level    TINYINT    DEFAULT 0    NOT NULL,
date    DATETIME    DEFAULT NOW()    NOT NULL,
text    VARCHAR(300)    DEFAULT ''    NOT NULL,
CONSTRAINT FK_FROM_USER_ID  FOREIGN KEY(from_user_id)  REFERENCES USER(user_id)  ON DELETE  CASCADE,
CONSTRAINT FK_TARGET_USER_ID  FOREIGN KEY(target_user_id)  REFERENCES USER(user_id)  ON DELETE  CASCADE
);


CREATE TABLE FOLLOW (
  id    INT    UNSIGNED    PRIMARY KEY    DEFAULT AUTO_INCREMENT,
  from_user_id    VARCHAR(20)    NOT NULL,
  target_user_id    VARCHAR(20)    NOT NULL,
  date    DATE    DEFAULT NOW()    NOT NULL,
  CONSTRAINT FK_FROM_USER_ID  FOREIGN KEY(from_user_id)  REFERENCES USER(user_id)  ON DELETE  CASCADE,
  CONSTRAINT FK_TARGET_USER_ID  FOREIGN KEY(target_user_id)  REFERENCES USER(user_id)  ON DELETE  CASCADE
);


CREATE TABLE CATEGORY (
  id    TINYINT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  name    VARCHAR(50)    NOT NULL,
  type    VARCHAR(10)    NOT NULL,
  parent_id    TINYINT    UNSIGNED    NOT DEFAULT 0    NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  creater_id    VARCHAR(20)    NOT NULL,
  CONSTRAINT FK_CREATER_ID    FOREIGN KEY(creater_id)  REFERENCES USER(user_id)  ON DELETE  NO ACTION
);


CREATE TABLE HASHTAG (
  hashtag    VARCHAR(30)    PRIMARY KEY,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  author_id    VARCHAR(20)    NOT NULL,
  CONSTRAINT FK_AUTHOR_ID    FOREIGN KEY(author_id)  REFERENCES USER(user_id)  ON DELETE  NO ACTION
);


CREATE TABLE USE_HASHTAG (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  hashtag    VARCHAR(30)    NOT NULL,
  from_content_id    INT    UNSIGNED    NOT NULL,
  CONSTRAINT FK_HASHTAG    FOREIGN KEY(hashtag)  REFERENCES HASHTAG(hashtag)  ON DELETE  CASCADE
);


CREATE TABLE CONTENT_AND_ACTION_LIST (
  id    TINYINT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  category    VARCHAR(20)    NOT NULL,
  type    VARCHAR(10)    NOT NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  creater_id    VARCHAR(20)    NOT NULL,
  CONSTRAINT FK_CREATER_ID    FOREIGN KEY(creater_id)  REFERENCES USER(user_id),
  CONSTRAINT UQ_TYPE_AND_CATEGORY    UNIQUE(type, category)
);


CREATE TABLE CONTENT_USER_RECORD (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  content_category    VARCHAR(20)    NOT NULL,
  record_type    VARCHAR(10)    NOT NULL,
  content_id    INT    UNSIGNED    NOT NULL,
  from_user_id    VARCHAR(20)    NOT NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  CONSTRAINT  FK_CONTENT_CATEGORY    FOREIGN KEY(content_category)  REFERENCES  CONTENT_AND_ACTION_LIST(category)    ON DELETE  CASCADE,
  CONSTRAINT  FK_RECORD_TYPE    FOREIGN KEY(record_type)  REFERENCES  CONTENT_AND_ACTION_LIST(type)  ON DELETE  CASCADE,
  CONSTRAINT  FK_FROM_USER_ID    FOREIGN KEY(from_user_id)    REFERENCES  USER(user_id)  ON DELETE  NO ACTION,
  CONSTRAINT  UQ_CATEGORY_AND_TYPE_AND_ID    UNIQUE(content_category, record_type, content_id)
);


CREATE TABLE POST (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  category_id    TINYINT    UNSIGNED    NOT NULL,
  title    VARCHAR(100)    NOT NULL,
  text    TEXT    DEFAULT ''    NOT NULL,
  author_id    VARCHAR(20)    NOT NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  updated_date    DATETIME    DEFAULT NOW()    NOT NULL,
  CONSTRAINT FK_AUTHOR_ID    FOREIGN KEY(author_id)  REFERENCES USER(user_id)    ON DELETE  NO ACTION
);


CREATE TABLE POST_IMAGE (
  id    BIGINT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  from_post_id    INT    UNSIGNED    NOT NULL,
  src    VARCHAR(255)    NOT NULL,
  discription    VARCHAR(200)    DEFAULT ''    NOT NULL,
  CONSTRAINT FK_POST_ID    FOREIGN KEY(post_id)  REFERENCES POST(id)    ON DELETE  CASCADE
);


CREATE TABLE COMMENT (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  post_id    INT    UNSIGNED    NOT NULL,
  text    VARCHAR(1000)    NOT NULL,
  author_id    VARCHAR(20)    NOT NULL,
  created_date    DATETIME    DEFAULT ONW()    NOT NULL,
  CONSTRAINT  FK_POST_IDFOREIGN KEY(post_id)    REFERENCES  POST(id)    ON DELETE  CASCADE,
  CONSTRAINT  FK_AUTHOR_ID    FOREIGN KEY(author_id)    REFERENCES  USER(user_id)    ON DELETE  NO ACTION
);


CREATE TABLE EVENT (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  title    VARCHAR(100)    NOT NULL,
  poster_img    VARCHAR(255)    DEFAULT ''    NOT NULL,
  author_id    VARCHAR(20)    NOT NULL,
  state    VARCHAR(10)    DEFAULT ''    NOT NULL,
  level    TINYINT    DEFAULT 0    NOT NULL,
  start_date    DATETIME    NOT NULL,
  end_date    DATETIME    NOT NULL,
  discription    TEXT    NOT NULL,
  CONSTRAINT  FK_AUTHOR_ID    FOREIGN KEY(author_id)    REFERENCES  USER(user_id)    ON DELETE  NO ACTION
);


CREATE TABLE EVENT_JOIN (
  id    INT    UNSIGNED    PRIMARY KEY    AUTO_INCREMENT,
  event_id    INT    UNSIGNED    NOT NULL,
  author_id    VARCHAR(20)    NOT NULL,
  type    VARCHAR(10)    NOT NULL,
  created_date    DATETIME    DEFAULT NOW()    NOT NULL,
  CONSTRAINT  FK_EVENT_ID    FOREIGN KEY(event_id)    REFERENCES  EVENT(id)    ON DELETE  CASCADE,
  CONSTRAINT  FK_AUTHOR_ID    FOREIGN KEY(author_id)    REFERENCES  USER(user_id)    ON DELETE  NO ACTION
);